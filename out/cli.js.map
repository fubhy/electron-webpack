{"version":3,"file":"cli.js","sourceRoot":"","sources":["../src/cli.ts"],"names":[],"mappings":";;AAEA,AAAO,AAAK,AAAI,AAAM,AAAM;;;;AAC5B,AAAO,AAAK,AAAM,AAAO;;;;;;;;AAEzB,AAAuD;AACvD,AAAgD;AAChD,AAAK,kCACF,AAAO,QAAC,CAAC,AAAK,OAAE,AAAS,WAAE,AAAG,AAAC,MAAE,AAAqB,uBAAE,AAAK,AAAC,AAAE,SAAC,AAAK,OAAE,AAAI,AAAC,AAAE,QAAC,AAAK,MAAC,AAAK,AAAC,AAAC,QAC7F,AAAO,QAAC,CAAC,AAAM,AAAC,SAAE,AAAsB,wBAAE,AAAK,AAAC,AAAE,SAAC,AAAK,OAAE,AAAI,AAAC,AAAE,QAAC,AAAK,MAAC,AAAM,AAAC,AAAC,SAChF,AAAO,QAAC,CAAC,AAAU,AAAC,aAAE,AAA0B,4BAAE,AAAK,AAAC,AAAE,SAAC,AAAK,OAAE,AAAI,AAAC,AAAE,QAAC,AAAK,MAAC,AAAU,AAAC,AAAC,aAC5F,AAAO,QAAC,CAAC,AAAK,AAAC,QAAE,AAAqB,uBAAE,AAAK,AAAC,AAAE,SAAC,AAAK,OAAE,AAAI,AAAC,AAAE,QAAC,AAAK,MAAC,AAAc,AAAC,AAAC,iBACtF,AAAO,QAAC,CAAC,AAAK,AAAC,QAAE,AAAwB,0BAAE,AAAK,AAAC,AAAE,SAAC,AAAK,OAAE,AAAI,AAAC,AAAE,QAAC,AAAY,AAAE,AAAC,gBAClF,AAAI;AAEP,eAAe,AAAkB;AAC/B,UAAM,AAAI,OAAG,AAAO,QAAC,AAAI;AACzB,AAAwH;AACxH,UAAM,AAAU,aAAG,AAAI,KAAC,AAAM,SAAG,AAAC,KAAI,CAAC,AAAI,KAAC,AAAC,AAAC,GAAC,AAAU,WAAC,AAAG,AAAC,AAAC,AAAC,OAAC,AAAC,AAAC,AAAC,IAAC,AAAC;AACtE,UAAM,AAAgB,mBAAG,AAAU,aAAG,AAAI,KAAC,AAAM,AAAC,AAAC,SAAC,AAAI,KAAC,AAAK,MAAC,AAAU,AAAC,AAAC,AAAC,cAAC,AAAE;AAC/E,AAAoB;AACpB,AAAI,SAAC,AAAM,SAAG,AAAC;AACf,AAAE,AAAC,QAAC,CAAC,AAAgB,iBAAC,AAAI,KAAC,AAAE,AAAC,AAAE,MAAC,AAAE,GAAC,AAAQ,SAAC,AAAkB,AAAC,AAAC,AAAC,sBAAC,AAAC;AAClE,AAAI,aAAC,AAAI,KAAC,AAAkB,AAAC,AAC/B;AAAC;AACD,AAAI,SAAC,AAAI,KAAC,AAAY,AAAC;AACvB,AAAI,SAAC,AAAI,KAAC,GAAG,AAAgB,AAAC;AAC9B,AAAI,SAAC,AAAI,KAAC,AAAU,YAAE,AAAI,MAAC,AAAI,KAAC,AAAS,WAAE,AAAI,AAAE,iBAAW,AAAU,UAAY,AAAC,AAAC;AAEpF,AAAO,YAAC,AAAO,AAAC,SAAC,AAAI,KAAC,AAAK,MAAC,AAAC,AAAC,AAAC;AAC/B,AAAO,YAAC,AAAI,MAAC,AAAI,KAAC,AAAO,QAAC,AAAG,AAAE,OAAE,AAAc,gBAAE,AAAS,WAAE,AAAK,OAAE,AAAY,AAAC,AAAC,AACnF;AAAC;AAED;AACE,AAAO,YAAC,AAAkB,AAAC,AAC7B;AAAC","sourcesContent":["#!/usr/bin/env node\n\nimport * as path from \"path\"\nimport yargs from \"yargs\"\n\n// not strict because we allow to pass any webpack args\n// tslint:disable-next-line:no-unused-expression\nyargs\n  .command([\"app\", \"compile\", \"*\"], \"Compile application\", yargs => yargs, argv => build(\"app\"))\n  .command([\"main\"], \"Compile main process\", yargs => yargs, argv => build(\"main\"))\n  .command([\"renderer\"], \"Compile renderer process\", yargs => yargs, argv => build(\"renderer\"))\n  .command([\"dll\"], \"Compile DLL bundles\", yargs => yargs, argv => build(\"renderer.dll\"))\n  .command([\"dev\"], \"Run a development mode\", yargs => yargs, argv => runInDevMode())\n  .argv\n\nfunction build(configFile: string) {\n  const args = process.argv\n  // if command `electron-webpack` - remove first 2 args, if `electron-webpack compile` (or any other subcommand name) - 3\n  const sliceIndex = args.length > 2 && !args[2].startsWith(\"-\") ? 3 : 2\n  const extraWebpackArgs = sliceIndex < args.length ? args.slice(sliceIndex) : []\n  // remove extra args\n  args.length = 2\n  if (!extraWebpackArgs.some(it => it.includes(\"--env.production\"))) {\n    args.push(\"--env.production\")\n  }\n  args.push(\"--progress\")\n  args.push(...extraWebpackArgs)\n  args.push(\"--config\", path.join(__dirname, \"..\", `webpack.${configFile}.config.js`))\n\n  require(\"yargs\")(args.slice(2))\n  require(path.join(process.cwd(), \"node_modules\", \"webpack\", \"bin\", \"webpack.js\"))\n}\n\nfunction runInDevMode() {\n  require(\"./dev/dev-runner\")\n}"]}
