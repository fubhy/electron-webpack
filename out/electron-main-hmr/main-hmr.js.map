{"version":3,"file":"main-hmr.js","sourceRoot":"","sources":["../../src/electron-main-hmr/main-hmr.ts"],"names":[],"mappings":";;AAAA,AAAO,QAAC,AAA0C,AAAC,4CAAC,AAAO,AAAE;AAE7D,MAAM,AAAU,aAAG,AAAO,QAAC,AAAG,IAAC,AAAyB;AACxD,AAAE,AAAC,IAAC,AAAU,cAAI,AAAI,AAAC,MAAC,AAAC;AACvB,UAAM,IAAI,AAAK,AAAC,MAA+C,AAAC,AAClE;AAAC;AAED,AAAkF;AAClF,MAAM,AAAS,YAAG,AAAO,QAAC,AAAkD,AAAC,oDAAC,AAAS;AACvF,AAAsC;AACtC,IAAI,AAAS,UAAC,AAAU,YAAG,AAAc,OAAC,AAAG,KAAE,AAAG,AAAE;AAClD,AAAM,WAAC,AAAgB,AACzB;AAAC,AAAC","sourcesContent":["require(\"source-map-support/source-map-support.js\").install()\n\nconst socketPath = process.env.ELECTRON_HMR_SOCKET_PATH!\nif (socketPath == null) {\n  throw new Error(`[HMR] Env ELECTRON_HMR_SOCKET_PATH is not set`)\n}\n\n// module, but not relative path must be used (because this file is used as entry)\nconst HmrClient = require(\"electron-webpack/out/electron-main-hmr/HmrClient\").HmrClient\n// tslint:disable:no-unused-expression\nnew HmrClient(socketPath, (module as any).hot, () => {\n  return __webpack_hash__\n})"]}
