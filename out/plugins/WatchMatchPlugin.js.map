{"version":3,"file":"WatchMatchPlugin.js","sourceRoot":"","sources":["../../src/plugins/WatchMatchPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["import { Compiler } from \"webpack\"\n\nexport class WatchFilterPlugin {\n  constructor(private readonly filter: WatchFileSystemFilter, private readonly debug: any) {\n  }\n\n  apply(compiler: Compiler) {\n    compiler.plugin(\"after-environment\", () => {\n      (compiler as any).watchFileSystem = new IgnoringWatchFileSystem((compiler as any).watchFileSystem, this.filter, this.debug)\n    })\n  }\n}\n\ninterface WatchFileSystem {\n  watch(files: Array<string>, dirs: Array<string>, missing: Array<string>, startTime: number, options: any, callback: WatchFileSystemCallback, callbackUndelayed: () => void): void\n}\n\n// include or not\nexport type WatchFileSystemFilter = (file: string) => boolean\n\nexport type WatchFileSystemCallback = (error: Error | null, filesModified?: Array<string>, dirsModified?: Array<string>, missingModified?: Array<string>, fileTimestamps?: { [key: string]: number }, dirTimestamps?: { [key: string]: number }) => void\n\nclass IgnoringWatchFileSystem {\n  constructor(private readonly wfs: WatchFileSystem, private readonly filter: WatchFileSystemFilter, private readonly debug: any) {\n  }\n\n  watch(files: Array<string>, dirs: Array<string>, missing: Array<string>, startTime: number, options: any, callback: WatchFileSystemCallback, callbackUndelayed: () => void) {\n    const includedFiles: Array<string> = []\n    const includedDirs: Array<string> = []\n    const excludedFiles: Array<string> = []\n    const excludedDirs: Array<string> = []\n    separate(this.filter, files, includedFiles, excludedFiles)\n    separate(this.filter, dirs, includedDirs, excludedDirs)\n\n    if (this.debug.enabled) {\n      this.debug(`files:${stringifyList(files)}\\ndirs:${stringifyList(dirs)}\\nmissing:${stringifyList(missing)}`)\n      this.debug(`includedFiles:${stringifyList(includedFiles)}\\nincludedDirs:${stringifyList(includedDirs)}\\nexcludedFiles:${stringifyList(excludedFiles)}\\nexcludedDirs:${stringifyList(excludedDirs)}`)\n    }\n\n    return this.wfs.watch(includedFiles, includedDirs, missing, startTime, options, (error, filesModified, dirsModified, missingModified, fileTimestamps, dirTimestamps) => {\n      if (error != null) {\n        callback(error)\n        return\n      }\n\n      for (const p of excludedFiles) {\n        fileTimestamps![p] = 1\n      }\n\n      for (const p of excludedDirs) {\n        dirTimestamps![p] = 1\n      }\n\n      callback(null, filesModified, dirsModified, missingModified, fileTimestamps, dirTimestamps)\n    }, callbackUndelayed)\n  }\n}\n\nfunction separate(filter: WatchFileSystemFilter, list: Array<string>, included: Array<string>, excluded: Array<string>) {\n  for (const file of list) {\n    (filter(file) ? included : excluded).push(file)\n  }\n}\n\nfunction stringifyList(list: Array<string>) {\n  return `\\n  ${list.map(it => it.startsWith(process.cwd()) ? it.substring(process.cwd().length + 1) : it).join(\",\\n  \")}`\n}"]}
