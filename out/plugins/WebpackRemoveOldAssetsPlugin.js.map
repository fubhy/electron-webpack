{"version":3,"file":"WebpackRemoveOldAssetsPlugin.js","sourceRoot":"","sources":["../../src/plugins/WebpackRemoveOldAssetsPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["import BluebirdPromise from \"bluebird-lst\"\nimport { lstat, readdir, remove, Stats } from \"fs-extra-p\"\nimport * as path from \"path\"\nimport { Compiler } from \"webpack\"\nimport { orNullIfFileNotExist } from \"../util\"\n\nexport const MAX_FILE_REQUESTS = 8\nexport const CONCURRENCY = {concurrency: MAX_FILE_REQUESTS}\n\nconst debug = require(\"debug\")(\"electron-webpack:clean\")\n\nexport async function walk(initialDirPath: string, filter?: Filter | null): Promise<Array<string>> {\n  const result: Array<string> = []\n  const queue: Array<string> = [initialDirPath]\n  let addDirToResult = false\n  while (queue.length > 0) {\n    const dirPath = queue.pop()!\n\n    const childNames = await orNullIfFileNotExist(readdir(dirPath))\n    if (childNames == null) {\n      continue\n    }\n\n    if (addDirToResult) {\n      result.push(dirPath)\n    }\n    else {\n      addDirToResult = true\n    }\n\n    childNames.sort()\n\n    const dirs: Array<string> = []\n    // our handler is async, but we should add sorted files, so, we add file to result not in the mapper, but after map\n    const sortedFilePaths = await BluebirdPromise.map(childNames, name => {\n      const filePath = dirPath + path.sep + name\n      return lstat(filePath)\n        .then(stat => {\n          if (filter != null && !filter(filePath, stat)) {\n            return null\n          }\n\n          if (stat.isDirectory()) {\n            dirs.push(name)\n            return null\n          }\n          else {\n            return filePath\n          }\n        })\n    }, CONCURRENCY)\n\n    for (const child of sortedFilePaths) {\n      if (child != null) {\n        result.push(child)\n      }\n    }\n\n    dirs.sort()\n    for (const child of dirs) {\n      queue.push(dirPath + path.sep + child)\n    }\n  }\n\n  return result\n}\n\nexport type Filter = (file: string, stat: Stats) => boolean\n\nexport class WebpackRemoveOldAssetsPlugin {\n  constructor(private readonly dllManifest: string | null) {\n  }\n\n  apply(compiler: Compiler) {\n    compiler.plugin(\"after-emit\", (compilation: any, callback: (error?: Error) => void) => {\n      const newlyCreatedAssets = compilation.assets\n      const outDir = compiler.options.output!.path!\n      walk(outDir, (file, stat) => {\n        // dll plugin\n        if (file === this.dllManifest) {\n          return false\n        }\n\n        const relativePath = file.substring(outDir.length + 1)\n        if (stat.isFile()) {\n          return newlyCreatedAssets[relativePath] == null\n        }\n        else if (stat.isDirectory()) {\n          for (const p of Object.keys(newlyCreatedAssets)) {\n            if (p.length > relativePath.length && (p[relativePath.length] === \"/\" || p[relativePath.length] === \"\\\\\") && p.startsWith(relativePath)) {\n              return false\n            }\n          }\n          return true\n        }\n        return false\n      })\n        .then((it): any => {\n          if (it.length === 0) {\n            return null\n          }\n\n          if (debug.enabled) {\n            debug(`Remove outdated files:\\n  ${it.join(\"\\n  \")}`)\n          }\n          return BluebirdPromise.map(it, it => remove(it), CONCURRENCY)\n        })\n        .then(() => callback())\n        .catch(callback)\n    })\n  }\n}\n"]}
