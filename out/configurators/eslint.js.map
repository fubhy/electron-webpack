{"version":3,"file":"eslint.js","sourceRoot":"","sources":["../../src/configurators/eslint.ts"],"names":[],"mappings":";;;;;;yBAEgC,AAAiC;AAC/D,UAAM,AAAS,YAAG,AAAY,aAAC,AAAgB,iBAAC,AAAyB,AAAC;AAC1E,AAAE,AAAC,QAAC,AAAC,EAAC,AAAS,AAAI,aAAC,AAAY,aAAC,AAAgB,iBAAC,AAAQ,AAAC,aAAI,AAAY,aAAC,AAAgB,iBAAC,AAAe,AAAC,AAAC,AAAC,AAAC,mBAAC,AAAC;AAChH,AAAM,AACR;AAAC;AAED,UAAM,AAAO;AACX,AAAG,aAAE,AAAY,aAAC,AAAU,AAC7B;AAFwC;AAGzC,AAAE,AAAC,QAAC,AAAS,aAAI,AAAY,aAAC,AAAgB,iBAAC,AAA2B,AAAC,AAAC,8BAAC,AAAC;AAC5E,AAAO,gBAAC,AAAS,YAAG,AAAO,QAAC,AAA2B,AAAC,AAC1D;AAAC;AAED,AAAY,iBAAC,AAAK,MAAC,AAAI;AACrB,AAAI,cAAE,AAAoB;AAC1B,AAAO,iBAAE,AAAK;AACd,AAAO,iBAAE,AAAc;AACvB,AAAM,gBAAE,AAAe;AACvB,AAAO,AACR,AAAC,AACJ;AAP0B;AAOzB","sourcesContent":["import { WebpackConfigurator } from \"../main\"\n\nexport function configureEslint(configurator: WebpackConfigurator) {\n  const hasPreset = configurator.hasDevDependency(\"electron-webpack-eslint\")\n  if (!(hasPreset || (configurator.hasDevDependency(\"eslint\") && configurator.hasDevDependency(\"eslint-loader\")))) {\n    return\n  }\n\n  const options: { [name: string]: any } = {\n    cwd: configurator.projectDir\n  }\n  if (hasPreset || configurator.hasDevDependency(\"eslint-friendly-formatter\")) {\n    options.formatter = require(\"eslint-friendly-formatter\")\n  }\n\n  configurator.rules.push({\n    test: /\\.(jsx?|tsx?|vue)$/,\n    enforce: \"pre\",\n    exclude: /node_modules/,\n    loader: \"eslint-loader\",\n    options\n  })\n}"]}
