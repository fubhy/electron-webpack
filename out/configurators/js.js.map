{"version":3,"file":"js.js","sourceRoot":"","sources":["../../src/configurators/js.ts"],"names":[],"mappings":";;;;;;;;;AAAA,AAAO,AAAE,AAAG,AAAE,AAAM,AAAQ,AAG5B,AAAM;;;;2BAA4B,AAAiC;AACjE,AAAmK;AACnK,UAAM,AAAO,YAET,AAAO,QAAC,AAAkB,AAAC;AAC3B,AAAO,iBAAE,AAAK;AACd,AAAO,iBAAE,AAAqB,sBAAC,AAAY,aAAC,AAAU,YAAE,AAAY,aAAC,AAAe,AAAC,AACtF,AAAC,AACH;AAJgC,KAD/B,CADc;AAOhB,UAAM,AAAO,UAAG,CACd,AAAO,QAAC,AAAoC,AAAC,AAC9C;AAED,AAAE,AAAC,QAAC,AAAY,aAAC,AAAI,SAAK,AAAM,UAAI,AAAY,aAAC,AAAa,cAAC,AAAY,AAAC,AAAC,eAAC,AAAC;AAC7E,AAAO,gBAAC,AAAI,MAAE,AAAO,QAAC,AAAwB,AAAC;AAE3C,AAAW,yBAAE,AAAY;AACzB,AAAgB,8BAAE,AAAa,AAChC,AACF,AAAC,AAAC,AACL;AALI,SAD+C,CAApC;AAMd;AAED,AAAY,iBAAC,AAAO,SAAE,AAAY,aAAC,AAA0B,2BAAC,EAAC,AAAQ,UAAE,CAAC,AAAe,AAAC,kBAAE,AAAQ,UAAE,CAAC,AAAkB,AAAC,AAAC,AAAC,AAAC;AAC7H,AAAY,iBAAC,AAAO,SAAE,AAAY,aAAC,AAA0B,2BAAC,EAAC,AAAQ,UAAE,CAAC,AAAe,AAAC,kBAAE,AAAQ,UAAE,CAAC,AAAoC,AAAC,AAAC,AAAC,AAAC;AAE/I,AAAM;AACJ,AAAM,gBAAE,AAAc;AACtB,AAAO;AACL,AAAO;AACP,AAAO,AACR,AACF,AACH;AALa;AAFJ;AAOR;AAED,sBAAsB,AAAc,IAAE,AAAoB;AACxD,AAAG,AAAC,SAAC,MAAM,AAAI,QAAI,AAAK,AAAC,OAAC,AAAC;AACzB,cAAM,AAAM,SAAG,AAAO,QAAC,AAAI,AAAC;AAC5B,AAAE,WAAC,AAAI,KAAC,CAAC,AAAM,OAAC,AAAO,WAAI,AAAM,AAAC,AAAC,AACrC;AAAC,AACH;AAAC;AAED,+BAA+B,AAAmB,YAAE,AAAuB;AACzE,AAAE,AAAC,QAAC,AAAU,AAAC,YAAC,AAAC;AACf,AAAM;AACJ,AAAQ,sBAAE,AAAe,AAC1B,AACH;AAHS;AAGR;AAED,AAAgE;AAChE,QAAI,AAAW,cAAG,AAAO;AACzB,AAAE,AAAC,QAAC,AAAG,qCAAC,AAAe,iBAAE,AAAO,AAAC,AAAC,UAAC,AAAC;AAClC,AAAiE;AACjE,AAAW,sBAAG,AAAO,AACvB;AAAC;AAED,AAAM;AACJ,AAAI,cAAE,AAAW,AAClB,AACH;AAHS;AAGR","sourcesContent":["import { gte } from \"semver\"\nimport { WebpackConfigurator } from \"../main\"\n\nexport function createBabelLoader(configurator: WebpackConfigurator) {\n  // better to use require instead of just preset name to avoid babel resolving (in our test we set custom resolver - and only in case of explicit required it works)\n  const presets = [\n    [\n      require(\"babel-preset-env\"), {\n      modules: false,\n      targets: computeBabelEnvTarget(configurator.isRenderer, configurator.electronVersion),\n    }],\n  ]\n  const plugins = [\n    require(\"babel-plugin-syntax-dynamic-import\"),\n  ]\n\n  if (configurator.type !== \"main\" && configurator.hasDependency(\"element-ui\")) {\n    plugins.push([require(\"babel-plugin-component\"), [\n      {\n        libraryName: \"element-ui\",\n        styleLibraryName: \"theme-chalk\"\n      },\n    ]])\n  }\n\n  addBabelItem(presets, configurator.getMatchingDevDependencies({includes: [\"babel-preset-\"], excludes: [\"babel-preset-env\"]}))\n  addBabelItem(plugins, configurator.getMatchingDevDependencies({includes: [\"babel-plugin-\"], excludes: [\"babel-plugin-syntax-dynamic-import\"]}))\n\n  return {\n    loader: \"babel-loader\",\n    options: {\n      presets,\n      plugins\n    }\n  }\n}\n\nfunction addBabelItem(to: Array<any>, names: Array<string>) {\n  for (const name of names) {\n    const module = require(name)\n    to.push([module.default || module])\n  }\n}\n\nfunction computeBabelEnvTarget(isRenderer: boolean, electronVersion: string) {\n  if (isRenderer) {\n    return {\n      electron: electronVersion\n    }\n  }\n\n  // https://github.com/electron/electron/blob/1-6-x/.node-version\n  let nodeVersion = \"7.4.0\"\n  if (gte(electronVersion, \"1.7.3\")) {\n    // https://github.com/electron/electron/blob/master/.node-version\n    nodeVersion = \"7.9.0\"\n  }\n\n  return {\n    node: nodeVersion\n  }\n}"]}
